// A Very Big Sum
public static long aVeryBigSum(List<long> ar)
    {
        long result = 0;
        foreach(long item in ar){
            result = result + item;
        }
        return result;
    }
    
// Simple Array Sum

public static int simpleArraySum(List<int> ar)
    {
        int sum = 0;
        foreach( var item in ar){
        sum += item;
    }
    return sum;
    }
// Day : 7 Arrays

class Solution
{
    public static void Main(string[] args)
    {
        int n = Convert.ToInt32(Console.ReadLine().Trim());

        List<int> arr = Console.ReadLine().TrimEnd().Split(' ').ToList().Select(arrTemp => Convert.ToInt32(arrTemp)).ToList();
        ReversePrint(arr);
    }
    private static void ReversePrint(List<int> arr)
    {
        int length = arr.Count;
        for(int i = length-1; i >= 0; i--){
            if(i !=0){
                Console.Write(arr[i]+ " ");
            }
            else{
                Console.Write(arr[i]);
            }
        }
    }
    
}

//Compare Triplets
public static List<int> compareTriplets(List<int> a, List<int> b)
    {
        int ax = 0; int bx =0;
        List<int> output = new List<int>();
        for (int i = 0; i <a.Count; i++)
    {
        if(a[i]==b[i])
        continue;
        if(a[i]<b[i])
        bx++;
        else
        ax++;
        
    }
        output.Add(ax);
        output.Add(bx);
        return output;
    }
    
// Day 20 : Sorting
using System.CodeDom.Compiler;
using System.Collections.Generic;
using System.Collections;
using System.ComponentModel;
using System.Diagnostics.CodeAnalysis;
using System.Globalization;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text.RegularExpressions;
using System.Text;
using System;



class Solution
{
    public static void Main(string[] args)
    {
        int n = Convert.ToInt32(Console.ReadLine().Trim());

        List<int> a = Console.ReadLine().TrimEnd().Split(' ').ToList().Select(aTemp => Convert.ToInt32(aTemp)).ToList();

        // Write your code here
        BubbleSort(a);
    }
    
    public static void BubbleSort(List<int> list)
{
    var numberOfSwaps = 0;
    for(var i = 0;i < list.Count; i++)
    {
        for(var j = 0; j < list.Count-1; j++)
        {
            if(list[j] > list[i+1])
            {
                var temp = list[j];
                list[j] = list[j+1];
                list[j+1] = temp;
                numberOfSwaps++;
            } 
        }
        if(numberOfSwaps == 0){
            break;
        }
    }
    Console.WriteLine($"Array is sorted in {numberOfSwaps} swaps.");
    Console.WriteLine($"First Element: {list[0]}");
    Console.WriteLine($"Last Element: {list[list.Count-1]}");
}

}


// Migratory Birds

 public static int migratoryBirds(List<int> arr)
    {
        int[] count = new int[arr.Max()];
        int max = 0, c = 0;
        for(int i=0; i<arr.Count; i++)
        {
            count[arr[i]-1]++;
        }
        for(int i=0; i<count.Length; i++)
        {
            if(max<count[i]) {max = count[i]; c = i; }
        }
        return c + 1;
    }

}
